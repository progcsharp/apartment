Создай SQL запрос для создания таблиц 
User:
fullname: text
phone: text
mail: text
password: text
is_active: bool
is_verified: bool
tarif: choice(standart, business, premium)
balance: int
date_before: date

region:
name:text

city:
name:
region:region(поле для связи с таблицей region)

apartment:
name: text

convenience:
name: text
photo: link to photo 

object:
name: text
author: user(поле для связи с таблицей user)
region: region(поле для связи с таблицей region)
city: city(поле для связи с таблицей city)
apartment:apartment(поле для связи с таблицей apartment)

так же должна быть связь manytomany между таблицами (object:convenience)

ответ:

CREATE TABLE "user" (
    id SERIAL PRIMARY KEY,
    fullname TEXT NOT NULL,
    phone TEXT NOT NULL,
    mail TEXT NOT NULL,
    password VARCHAR(255) NOT NULL,
    is_active BOOLEAN DEFAULT FALSE,
    is_verified BOOLEAN DEFAULT FALSE,
    is_admin BOOLEAN DEFAULT FALSE,
    tariff_id INTEGER NOT NULL,
    balance INTEGER DEFAULT 0,
    date_before DATE
);

CREATE TABLE "region" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE "city" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    region_id INT REFERENCES "region"(id) ON DELETE CASCADE
);

CREATE TABLE "apartment" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE "convenience" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    icon TEXT
);

CREATE TABLE "object" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    author_id INT REFERENCES "user"(id) ON DELETE CASCADE,
    city_id INT REFERENCES "city"(id) ON DELETE CASCADE,
    apartment_id INT REFERENCES "apartment"(id) ON DELETE CASCADE,
    description TEXT,
    price INT,
    area TEXT,
    room_count INT,  
    bed_count INT,  
    floor INT,
    prepayment_percentage INT CHECK (prepayment_percentage IN (0, 50, 100)),  
    photos TEXT[]  
);


CREATE TABLE "object" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    author_id INT REFERENCES "user"(id) ON DELETE CASCADE,
    city_id INT REFERENCES "city"(id) ON DELETE CASCADE,
    apartment_id INT REFERENCES "apartment"(id) ON DELETE CASCADE,
    description TEXT,
    price INT,
    area TEXT,
    room_count INT,  
    bed_count TEXT,
    floor TEXT,
    min_ded INT,
    prepayment_percentage INT CHECK (prepayment_percentage IN (0, 50, 100)),  
    photos TEXT[],
    address TEXT,
    active BOOLEAN DEFAULT false
);


CREATE TABLE "object_convenience" (
    object_id INT REFERENCES "object"(id) ON DELETE CASCADE,
    convenience_id INT REFERENCES "convenience"(id) ON DELETE CASCADE,
    PRIMARY KEY (object_id, convenience_id)
);


CREATE TABLE client (
    id SERIAL PRIMARY KEY,
    fullname VARCHAR(255),
    reiting FLOAT,
    phone VARCHAR(20),
    email VARCHAR(100)
);


CREATE TABLE reservation (
    id SERIAL PRIMARY KEY,
    object_id INTEGER REFERENCES object(id),
    client_id INTEGER REFERENCES client(id),
    start_date DATE,
    end_date DATE,
    status VARCHAR(20) CHECK (status IN ('new', 'approved', 'rejected', 'completed')),
    description TEXT
);


CREATE TABLE "client_user" (
    client_id INTEGER REFERENCES "client"(id),
    user_id INTEGER REFERENCES "user"(id),
    PRIMARY KEY (client_id, user_id)
);

ALTER TABLE object DROP COLUMN bed_count;


ALTER TABLE "object"
ADD "adult_places" INT,
ADD "child_places" INT;

CREATE TABLE tariff (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    daily_price INTEGER NOT NULL,
    object_count INTEGER NOT NULL,
    description TEXT,
    icon TEXT
);

ALTER TABLE reservation ADD COLUMN letter TEXT;


пароль почты 964dCGrEXvP3BcnwaBkV

################################################################################################################################################################################


CREATE TABLE "user" (
    id SERIAL PRIMARY KEY,
    fullname TEXT NOT NULL,
    phone TEXT NOT NULL,
    mail TEXT NOT NULL,
    password VARCHAR(255) NOT NULL,
    is_active BOOLEAN DEFAULT false,
    is_verified BOOLEAN DEFAULT false,
    is_admin BOOLEAN DEFAULT false,
    tariff_id INTEGER REFERENCES tariff(id),
    balance INTEGER DEFAULT 0,
    date_before DATE
);

-- Создаем связующую таблицу между user и client
CREATE TABLE "client_user" (
    user_id INTEGER REFERENCES "user"(id),
    client_id INTEGER REFERENCES client(id),
    PRIMARY KEY (user_id, client_id)
);

-- Создаем таблицу reservation
CREATE TABLE "reservation" (
    id SERIAL PRIMARY KEY,
    object_id INTEGER REFERENCES object(id),
    client_id INTEGER REFERENCES client(id),
    start_date DATE,
    end_date DATE,
    status VARCHAR(20),
    description TEXT,
    letter TEXT
);

-- Создаем таблицу object
CREATE TABLE "object" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    author_id INTEGER REFERENCES "user"(id),
    city_id INTEGER REFERENCES city(id),
    apartment_id INTEGER REFERENCES apartment(id),
    description TEXT,
    price INTEGER,
    area TEXT,
    room_count INTEGER,
    adult_places INTEGER,
    child_places INTEGER,
    floor TEXT,
    min_ded INTEGER,
    prepayment_percentage INTEGER,
    photos TEXT[],
    address TEXT,
    active BOOLEAN DEFAULT false
);

-- Создаем таблицу object_convenience для связи many-to-many между object и convenience
CREATE TABLE "object_convenience" (
    object_id INTEGER REFERENCES object(id),
    convenience_id INTEGER REFERENCES convenience(id),
    PRIMARY KEY (object_id, convenience_id)
);

-- Создаем таблицу convenience
CREATE TABLE "convenience" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    icon TEXT
);

-- Создаем таблицу client
CREATE TABLE "client" (
    id SERIAL PRIMARY KEY,
    fullname VARCHAR(255),
    reiting FLOAT,
    phone VARCHAR(20),
    email TEXT
);

-- Создаем таблицу region
CREATE TABLE "region" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL
);

-- Создаем таблицу city
CREATE TABLE "city" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    region_id INTEGER REFERENCES region(id) ON DELETE CASCADE
);

-- Создаем таблицу apartment
CREATE TABLE "apartment" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL
);

-- Создаем таблицу tariff
CREATE TABLE "tariff" (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    daily_price INTEGER NOT NULL,
    object_count INTEGER NOT NULL,
    description TEXT,
    icon TEXT
);

CREATE TABLE "server" (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    container_name VARCHAR(255) NOT NULL,
    "default" BOOLEAN DEFAULT false
);


CREATE TABLE logs (
  id SERIAL PRIMARY KEY,
  user_id INT,
  description TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE user ADD CONSTRAINT unique_phone_mail UNIQUE (phone, mail);
ALTER TABLE client ADD CONSTRAINT unique_client_phone_email UNIQUE (phone, email);
ALTER TABLE object ADD COLUMN letter TEXT;
UPDATE object SET letter = 'default_value' WHERE id IS NOT NULL;

ALTER TABLE server
ADD COLUMN default BOOLEAN DEFAULT false;

ALTER TABLE "region" ADD COLUMN server_id INTEGER;
ALTER TABLE server ADD COLUMN link TEXT;

ALTER TABLE reservation
ADD COLUMN guest_count INT;


ALTER TABLE reservation DROP COLUMN guest_count;

ALTER TABLE reservation
ADD COLUMN adult_places INTEGER,
ADD COLUMN child_places INTEGER;

CREATE TABLE hashtags (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE object_hashtag (
    id SERIAL PRIMARY KEY,
    object_id INTEGER REFERENCES object(id),
    hashtag_id INTEGER REFERENCES hashtags(id),
    UNIQUE(object_id, hashtag_id)
);